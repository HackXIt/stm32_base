{
    "version": "2.0.0",
    "options": {
        "shell": {
            "executable": "bash",
            "args": [
                "-ci"
            ]
        }
    },
    "tasks": [
        {
            "label": "Make Firmware",
            "type": "shell",
            "command": "make -j8 all TARGET=arm_firmware OPT=\"-O2\" BINPATH=/usr/bin/",
            "options": {
                "cwd": "${workspaceRoot}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "Clean build & Make Firmware",
            "type": "shell",
            "command": "make clean && make -j8 all TARGET=arm_firmware OPT=\"-O2\" BINPATH=/usr/bin/",
            "options": {
                "cwd": "${workspaceRoot}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "Load Firmware (inside WSL)",
            "type": "shell",
            "command": "st-flash write ./build/arm_firmware.bin 0x08000000",
            "options": {
                "cwd": "${workspaceRoot}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Load Firmware (via Windows)",
            "type": "shell",
            "command": "st-flash.exe write ./build/arm_firmware.bin 0x08000000",
            "options": {
                "cwd": "${workspaceRoot}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },
        {
            "label": "launch ST-Link",
            "command": "st-util.exe",
            "type": "shell",
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "postDebugKill",
            "command": "echo ${input:terminate}",
            "type": "shell",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "terminate",
            "type": "command",
            "command": "workbench.action.tasks.terminate",
            "args": "terminateAll"
        }
    ],
}